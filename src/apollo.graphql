query GetActivity($_id: ID!) {
  activity(_id: $_id) {
    _id
    name
    emoji
    category
    valueType
    pointsType
    points
  }
}

query GetActivities {
  activities {
    _id
    name
    emoji
    category
    valueType
    pointsType
    points
    createdAt
  }
}

query GetEntry($_id: ID!) {
  entry(_id: $_id) {
    _id
    description
    points
    value
    completedAt
    activity {
      name
      emoji
      category
    }
  }
}

query GetEntries {
  entries {
    _id
    description
    points
    value
    completedAt
    activity {
      name
      emoji
      category
    }
  }
}

query GetAchievements {
  achievements {
    _id
    name
    points
    priority
    createdAt
  }
}

query GetRewards {
  rewards {
    _id
    name
    points
  }
}

query GetSpendings {
  spendings {
    _id
    points
    reward {
      _id
      name
    }
    createdAt
  }
}

query GetBalance {
  balance
}

query GetProfile {
  profile {
    _id
    todoistUserId
    userId
  }
}

mutation CreateActivity($data: CreateActivityInput!) {
  createActivity(data: $data) {
    _id
  }
}

mutation UpdateActivity($_id: ID!, $data: UpdateActivityInput!) {
  updateActivityById(_id: $_id, data: $data) {
    _id
  }
}

mutation DeleteActivity($_id: ID!) {
  deleteActivity(_id: $_id)
}

mutation CreateEntry($data: CreateEntryInput!) {
  createEntry(data: $data) {
    _id
  }
}

mutation UpdateEntry($_id: ID!, $data: UpdateEntryInput!) {
  updateEntryById(_id: $_id, data: $data) {
    _id
  }
}

mutation DeleteEntry($_id: ID!) {
  deleteEntry(_id: $_id)
}

mutation CreateReward($data: CreateRewardInput!) {
  createReward(data: $data) {
    _id
    name
    points
  }
}

mutation UpdateRewardById($_id: ID!, $data: UpdateRewardInput!) {
  updateRewardById(_id: $_id, data: $data) {
    _id
    name
    points
  }
}

mutation DeleteReward($_id: ID!) {
  deleteReward(_id: $_id)
}

mutation SpendReward($rewardId: ID!) {
  spendReward(rewardId: $rewardId) {
    _id
    points
    reward {
      _id
      name
    }
    createdAt
  }
}

mutation DeleteSpending($_id: ID!) {
  deleteSpending(_id: $_id)
}

mutation DeleteAchievement($_id: ID!) {
  deleteAchievement(_id: $_id)
}

mutation ConnectTodoist($authCode: String!) {
  authorizeInTodoist(authCode: $authCode) {
    _id
    todoistUserId
  }
}

subscription OnAchievementCreated {
  achievementCreated {
    _id
    createdAt
    name
    points
    priority
  }
}
