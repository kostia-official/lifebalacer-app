fragment ActivityResult on Activity {
  _id
  name
  emoji
  category
  valueType
  pointsType
  points
  isArchived
  isWithDescription
  rangeMeta {
    from
    to
  }
}

query GetActivity($_id: ID!) {
  activity(_id: $_id) {
    ...ActivityResult
  }
}

query GetActivities {
  activities {
    ...ActivityResult
  }
}

fragment EntriesByDayResult on EntriesByDay {
  date
  points
  entries {
    _id
    description
    value
    completedAt
    activityId
  }
}

query GetEntriesByDay($dateAfter: Date) {
  entriesByDay(dateAfter: $dateAfter) {
    ...EntriesByDayResult
  }
}

query GetCalendarDays($dateAfter: Date, $dateBefore: Date) {
  entriesByDay(dateAfter: $dateAfter, dateBefore: $dateBefore) {
    date
    points
    entries {
      _id
      value
      activityId
    }
  }
}

query GetEntriesByOneDay($date: Date!) {
  entriesByOneDay(date: $date) {
    ...EntriesByDayResult
  }
}

query GetBalance {
  balance
}

query GetDaysStatistic {
  daysStatistic {
    missing
    streak
    total
  }
}

query GetReminder {
  reminder {
    _id
    remindAt
    isRepeating
  }
}

query GetPushToken {
  pushToken {
    _id
    token
    userId
  }
}

mutation CreateActivity($data: CreateActivityInput!) {
  createActivity(data: $data) {
    _id
  }
}

mutation UpdateActivity($_id: ID!, $data: UpdateActivityInput!) {
  updateActivityById(_id: $_id, data: $data) {
    _id
  }
}

mutation ArchiveActivity($_id: ID!) {
  archiveActivity(_id: $_id)
}

mutation RestoreActivity($_id: ID!) {
  restoreActivity(_id: $_id)
}

mutation CreateEntry($data: CreateEntryInput!) {
  createEntry(data: $data) {
    _id
  }
}

mutation UpdateEntry($_id: ID!, $data: UpdateEntryInput!) {
  updateEntryById(_id: $_id, data: $data) {
    _id
  }
}

mutation DeleteEntry($_id: ID!) {
  deleteEntry(_id: $_id)
}

mutation ConnectTodoist($authCode: String!) {
  connectTodoist(authCode: $authCode) {
    _id
  }
}

mutation UpsertReminder($data: ReminderInput!) {
  upsertReminder(data: $data) {
    _id
    createdAt
    remindAt
    isRepeating
    userId
  }
}

mutation UpsertPushToken($data: PushTokenUpsertInput!) {
  upsertPushToken(data: $data) {
    _id
    userId
    token
  }
}
